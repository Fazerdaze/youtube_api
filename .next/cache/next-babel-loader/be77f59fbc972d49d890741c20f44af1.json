{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Paper, Typography, Checkbox, Button } from \"@material-ui/core\";\nimport { post, del } from \"../../libs/ajax\";\nexport default (({\n  video\n}) => {\n  if (!video) return __jsx(\"div\", null, \"Loading...\");\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n  function like() {\n    const newGoal = {\n      name: video.snippet.title,\n      video: videoSrc,\n      channel: video.snippet.channelTitle,\n      subscribe: video.snippet.description\n    };\n    putGoalToState(newGoal);\n  }\n\n  function putGoalToState(goal) {\n    post('/posts', {\n      goal\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Paper, {\n    elevation: 6,\n    style: {\n      height: \"30%\"\n    }\n  }, __jsx(\"iframe\", {\n    frameBorder: \"0\",\n    height: \"100%\",\n    width: \"100%\",\n    title: \"Video Player\",\n    src: videoSrc\n  })), __jsx(Paper, {\n    elevation: 6,\n    style: {\n      padding: \"15px\"\n    }\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, video.snippet.title, \" - \", video.snippet.channelTitle), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, video.snippet.channelTitle), __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, __jsx(Button, {\n    onClick: like\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0441\\u0432\\u043E\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\")), __jsx(Typography, {\n    variant: \"subtitle3\"\n  }, video.snippet.description)));\n});","map":{"version":3,"sources":["D:/react_js_test/new_js/youtube_app/components/SearchYoutubeComponents/VideoDetail.js"],"names":["React","useState","Paper","Typography","Checkbox","Button","post","del","video","videoSrc","id","videoId","like","newGoal","name","snippet","title","channel","channelTitle","subscribe","description","putGoalToState","goal","height","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAoD,mBAApD;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,gBAAe,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC5B,MAAI,CAACA,KAAL,EAAY,OAAO,gCAAP;AACZ,QAAMC,QAAQ,GAAI,iCAAgCD,KAAK,CAACE,EAAN,CAASC,OAAQ,EAAnE;;AAEA,WAASC,IAAT,GAAe;AACb,UAAMC,OAAO,GACT;AACIC,MAAAA,IAAI,EAACN,KAAK,CAACO,OAAN,CAAcC,KADvB;AAEIR,MAAAA,KAAK,EAAEC,QAFX;AAGIQ,MAAAA,OAAO,EAAET,KAAK,CAACO,OAAN,CAAcG,YAH3B;AAIIC,MAAAA,SAAS,EAAEX,KAAK,CAACO,OAAN,CAAcK;AAJ7B,KADJ;AAOAC,IAAAA,cAAc,CAACR,OAAD,CAAd;AACD;;AAED,WAASQ,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BhB,IAAAA,IAAI,CAAC,QAAD,EAAW;AAAEgB,MAAAA;AAAF,KAAX,CAAJ;AACH;;AAEC,SACE,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAA5B,KACE;AACE,IAAA,WAAW,EAAC,GADd;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,KAAK,EAAC,cAJR;AAKE,IAAA,GAAG,EAAEd;AALP,IADF,CADF,EAUE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAAEe,MAAAA,OAAO,EAAE;AAAX;AAA5B,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACGhB,KAAK,CAACO,OAAN,CAAcC,KADjB,SAC2BR,KAAK,CAACO,OAAN,CAAcG,YADzC,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KACGV,KAAK,CAACO,OAAN,CAAcG,YADjB,CAJF,EAOE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KAAgC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN;AAAjB,6HAAhC,CAPF,EAQE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,KAAiCJ,KAAK,CAACO,OAAN,CAAcK,WAA/C,CARF,CAVF,CADF;AAuBD,CA1CD","sourcesContent":["import React, { useState } from 'react';\nimport { Paper, Typography, Checkbox, Button } from \"@material-ui/core\";\nimport { post, del } from \"../../libs/ajax\";\n\nexport default ({ video }) => {\n  if (!video) return <div>Loading...</div>;\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`; \n\n  function like(){\n    const newGoal=\n        {\n            name:video.snippet.title,\n            video: videoSrc, \n            channel: video.snippet.channelTitle, \n            subscribe: video.snippet.description,\n        }; \n    putGoalToState(newGoal)\n  }\n\n  function putGoalToState(goal) {\n    post('/posts', { goal })  \n}\n\n  return (\n    <React.Fragment>\n      <Paper elevation={6} style={{ height: \"30%\" }}>\n        <iframe\n          frameBorder=\"0\"\n          height=\"100%\"\n          width=\"100%\"\n          title=\"Video Player\"\n          src={videoSrc}\n        />\n      </Paper>\n      <Paper elevation={6} style={{ padding: \"15px\" }}>\n        <Typography variant=\"h4\">\n          {video.snippet.title} - {video.snippet.channelTitle}\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          {video.snippet.channelTitle}\n        </Typography>\n        <Typography variant=\"subtitle2\"><Button onClick={like}>Добавить в свой список</Button></Typography>\n        <Typography variant=\"subtitle3\">{video.snippet.description}</Typography>\n      </Paper>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}